{"ast":null,"code":"import axios from \"axios\";\nexport const listJobs = () => async dispatch => {\n  try {\n    dispatch({\n      type: \"JOBS_LIST_REQUEST\"\n    });\n    const {\n      data\n    } = await axios.get(\"https://coffeeandcode.onrender.com/api/jobs\");\n    dispatch({\n      type: \"JOBS_LIST_SUCCESS\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"JOBS_LIST_FAILURE\",\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //post job\n\nexport const postingJob = (position, company, salary, batch, location, apply, image) => async dispatch => {\n  try {\n    dispatch({\n      type: \"CREATE_JOB_REQUEST\"\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    await axios.post(\"http://localhost:3000/api/jobs/post\", {\n      position,\n      company,\n      salary,\n      batch,\n      location,\n      apply,\n      image\n    }, config);\n    dispatch({\n      type: \"CREATE_JOB_SUCCESS\"\n    });\n  } catch (error) {\n    dispatch({\n      type: \"CREATE_JOB_FAILURE\",\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //delete jobs\n//delete product\n\nexport const deleteJob = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: \"JOB_DELETE_REQUEST\"\n    });\n    await axios.delete(`https://localho/api/jobs/${id}`);\n    dispatch({\n      type: \"JOB_DELETE_SUCCESS\"\n    });\n  } catch (error) {\n    dispatch({\n      type: \"JOB_DELETE_FAILURE\",\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","listJobs","dispatch","type","data","get","payload","error","response","message","postingJob","position","company","salary","batch","location","apply","image","config","headers","post","deleteJob","id","getState","delete"],"sources":["E:/Sem-4_COEP/RPPOOP-Project/frontend/src/store/actions/jobActions.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const listJobs = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"JOBS_LIST_REQUEST\" });\r\n    const { data } = await axios.get(\"https://coffeeandcode.onrender.com/api/jobs\");\r\n\r\n    dispatch({ type: \"JOBS_LIST_SUCCESS\", payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"JOBS_LIST_FAILURE\",\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//post job\r\n\r\nexport const postingJob =\r\n  (position, company, salary, batch, location, apply, image) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: \"CREATE_JOB_REQUEST\",\r\n      });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      await axios.post(\r\n        \"http://localhost:3000/api/jobs/post\",\r\n        { position, company, salary, batch, location, apply, image },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: \"CREATE_JOB_SUCCESS\",\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"CREATE_JOB_FAILURE\",\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n//delete jobs\r\n\r\n//delete product\r\n\r\nexport const deleteJob = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: \"JOB_DELETE_REQUEST\" });\r\n\r\n    await axios.delete(`https://localho/api/jobs/${id}`);\r\n\r\n    dispatch({ type: \"JOB_DELETE_SUCCESS\" });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"JOB_DELETE_FAILURE\",\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;EAChD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAR,CAAD,CAAR;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMJ,KAAK,CAACK,GAAN,CAAU,6CAAV,CAAvB;IAEAH,QAAQ,CAAC;MAAEC,IAAI,EAAE,mBAAR;MAA6BG,OAAO,EAAEF;IAAtC,CAAD,CAAR;EACD,CALD,CAKE,OAAOG,KAAP,EAAc;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAE,mBADC;MAEPG,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;EAOD;AACF,CAfM,C,CAiBP;;AAEA,OAAO,MAAMC,UAAU,GACrB,CAACC,QAAD,EAAWC,OAAX,EAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,QAAnC,EAA6CC,KAA7C,EAAoDC,KAApD,KACA,MAAOf,QAAP,IAAoB;EAClB,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAE;IADC,CAAD,CAAR;IAGA,MAAMe,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,gBAAgB;MADT;IADI,CAAf;IAKA,MAAMnB,KAAK,CAACoB,IAAN,CACJ,qCADI,EAEJ;MAAET,QAAF;MAAYC,OAAZ;MAAqBC,MAArB;MAA6BC,KAA7B;MAAoCC,QAApC;MAA8CC,KAA9C;MAAqDC;IAArD,CAFI,EAGJC,MAHI,CAAN;IAMAhB,QAAQ,CAAC;MACPC,IAAI,EAAE;IADC,CAAD,CAAR;EAGD,CAlBD,CAkBE,OAAOI,KAAP,EAAc;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAE,oBADC;MAEPG,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;EAOD;AACF,CA9BI,C,CAgCP;AAEA;;AAEA,OAAO,MAAMY,SAAS,GAAIC,EAAD,IAAQ,OAAOpB,QAAP,EAAiBqB,QAAjB,KAA8B;EAC7D,IAAI;IACFrB,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAR,CAAD,CAAR;IAEA,MAAMH,KAAK,CAACwB,MAAN,CAAc,4BAA2BF,EAAG,EAA5C,CAAN;IAEApB,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAR,CAAD,CAAR;EACD,CAND,CAME,OAAOI,KAAP,EAAc;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAE,oBADC;MAEPG,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;EAOD;AACF,CAhBM"},"metadata":{},"sourceType":"module"}